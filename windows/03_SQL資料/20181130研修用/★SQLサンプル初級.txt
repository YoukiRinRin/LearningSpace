USE TOADB;
declare @sql nvarchar(max)
set @sql = '/* 出荷シミュレーションデータ(IFS) */
WITH
 V1 AS (SELECT KEY01,
               W1.TOA_SUM06 AS TOA_SUM06, W1.TOA_SUM07 AS TOA_SUM07,
               W1.TOA_SUM08 AS TOA_SUM08, W1.TOA_SUM09 AS TOA_SUM09,
               W1.TOA_SUM10 AS TOA_SUM10, W1.TOA_SUM11 AS TOA_SUM11,
               W1.TOA_SUM12 AS TOA_SUM12, W1.TOA_SUM13 AS TOA_SUM13,
               W1.TOA_SUM14 AS TOA_SUM14, W1.TOA_SUM15 AS TOA_SUM15,
               W1.TOA_SUM16 AS TOA_SUM16, W1.TOA_SUM17 AS TOA_SUM17,
               W1.TOA_SUM18 AS TOA_SUM18, W1.TOA_SUM19 AS TOA_SUM19,
               W1.TOA_SUM20 AS TOA_SUM20, W1.TOA_SUM21 AS TOA_SUM21,
               W1.TOA_SUM22 AS TOA_SUM22, W1.TOA_SUM23 AS TOA_SUM23,
               W1.TOA_TOTAL AS TOA_TOTAL,
               W1.TOA_PALE_PORI,
               W1.TOA_SHIP_DEPOT, W1.TOA_SERIES, W1.TOA_PROCESS1, W1.TOA_PROCESS2
          FROM (SELECT TOA_PART_NO||TOA_F_LOCATION_GROUP                 AS KEY01,
                       ROW_NUMBER()
                         OVER( PARTITION BY TOA_PART_NO||TOA_F_LOCATION_GROUP
                               ORDER     BY TOA_PART_NO,
                                            TOA_F_LOCATION_GROUP,
                                            TOA_ISSUE_NO      DESC,
                                            TOA_ISSUE_LINE_NO DESC) AS RNO1,
                       TOA_SHIP_DEPOT, TOA_SERIES, TOA_PROCESS1, TOA_PROCESS2,
                      (TOA_QTY_PALETTE6  * TOA_SNP) + TOA_QTY_FRACTION6  AS TOA_SUM06,
                      (TOA_QTY_PALETTE7  * TOA_SNP) + TOA_QTY_FRACTION7  AS TOA_SUM07,
                      (TOA_QTY_PALETTE8  * TOA_SNP) + TOA_QTY_FRACTION8  AS TOA_SUM08,
                      (TOA_QTY_PALETTE9  * TOA_SNP) + TOA_QTY_FRACTION9  AS TOA_SUM09,
                      (TOA_QTY_PALETTE10 * TOA_SNP) + TOA_QTY_FRACTION10 AS TOA_SUM10,
                      (TOA_QTY_PALETTE11 * TOA_SNP) + TOA_QTY_FRACTION11 AS TOA_SUM11,
                      (TOA_QTY_PALETTE12 * TOA_SNP) + TOA_QTY_FRACTION12 AS TOA_SUM12,
                      (TOA_QTY_PALETTE13 * TOA_SNP) + TOA_QTY_FRACTION13 AS TOA_SUM13,
                      (TOA_QTY_PALETTE14 * TOA_SNP) + TOA_QTY_FRACTION14 AS TOA_SUM14,
                      (TOA_QTY_PALETTE15 * TOA_SNP) + TOA_QTY_FRACTION15 AS TOA_SUM15,
                      (TOA_QTY_PALETTE16 * TOA_SNP) + TOA_QTY_FRACTION16 AS TOA_SUM16,
                      (TOA_QTY_PALETTE17 * TOA_SNP) + TOA_QTY_FRACTION17 AS TOA_SUM17,
                      (TOA_QTY_PALETTE18 * TOA_SNP) + TOA_QTY_FRACTION18 AS TOA_SUM18,
                      (TOA_QTY_PALETTE19 * TOA_SNP) + TOA_QTY_FRACTION19 AS TOA_SUM19,
                      (TOA_QTY_PALETTE20 * TOA_SNP) + TOA_QTY_FRACTION20 AS TOA_SUM20,
                      (TOA_QTY_PALETTE21 * TOA_SNP) + TOA_QTY_FRACTION21 AS TOA_SUM21,
                      (TOA_QTY_PALETTE22 * TOA_SNP) + TOA_QTY_FRACTION22 AS TOA_SUM22,
                      (TOA_QTY_PALETTE23 * TOA_SNP) + TOA_QTY_FRACTION23 AS TOA_SUM23,
                       TOA_SUM_QTY                                       AS TOA_TOTAL,
                       TOA_PALETTE_PORI                                  AS TOA_PALE_PORI,
                       TOA_ISSUE_NO, TOA_ISSUE_LINE_NO
                  FROM IFSAPP.TOA_SHIPMENT_SCHEDULE_TAB
                 ORDER BY 1) W1
         WHERE   (W1.RNO1 <= 1)
         ORDER BY W1.KEY01),
 V_RITU AS (
        SELECT KEY01, TOA_PALE_PORI, TOA_SHIP_DEPOT, TOA_SERIES, TOA_PROCESS1, TOA_PROCESS2,
               ROUND(TOA_SUM06 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU06,
               ROUND(TOA_SUM07 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU07,
               ROUND(TOA_SUM08 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU08,
               ROUND(TOA_SUM09 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU09,
               ROUND(TOA_SUM10 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU10,
               ROUND(TOA_SUM11 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU11,
               ROUND(TOA_SUM12 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU12,
               ROUND(TOA_SUM13 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU13,
               ROUND(TOA_SUM14 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU14,
               ROUND(TOA_SUM15 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU15,
               ROUND(TOA_SUM16 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU16,
               ROUND(TOA_SUM17 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU17,
               ROUND(TOA_SUM18 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU18,
               ROUND(TOA_SUM19 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU19,
               ROUND(TOA_SUM20 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU20,
               ROUND(TOA_SUM21 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU21,
               ROUND(TOA_SUM22 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU22,
               ROUND(TOA_SUM23 / DECODE(NVL(TOA_TOTAL,1),0,1,NVL(TOA_TOTAL,1)), 8) AS TOA_RITU23,
               TOA_TOTAL
          FROM V1
         ORDER BY KEY01),
 CAL1 AS (SELECT W2.DATE_YM AS DATE_YM,
                 CASE WHEN W2.DATE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(''[TAISYO_YM]'' || ''01'',''YYMMDD''), 0),''YYYYMM'')
                           THEN  W2.WORK_DAY + [N0_ADD]
                      WHEN W2.DATE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(''[TAISYO_YM]'' || ''01'',''YYMMDD''), 1),''YYYYMM'')
                           THEN  W2.WORK_DAY + [N1_ADD]
                      WHEN W2.DATE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(''[TAISYO_YM]'' || ''01'',''YYMMDD''), 2),''YYYYMM'')
                           THEN  W2.WORK_DAY + [N2_ADD]
                      ELSE W2.WORK_DAY
                 END  AS WORK_DAY
            FROM (SELECT W1.DATE_YM        AS DATE_YM, COUNT(W1.DATE_YM) AS WORK_DAY
                    FROM (SELECT TO_CHAR(WORK_DAY,''YYYYMM'') AS DATE_YM
                            FROM IFSAPP.WORK_TIME_COUNTER_TAB
                           WHERE CALENDAR_ID = ''DIST'') W1
                   GROUP BY W1.DATE_YM
                   ORDER BY W1.DATE_YM) W2),
 V4 AS (SELECT DATE_YM1,
               TO_CHAR(ADD_MONTHS(TO_DATE(DATE_YM1 || ''01'',''YYMMDD''), 1),''YYYYMM'') AS DATE_YM2,
               TO_CHAR(ADD_MONTHS(TO_DATE(DATE_YM1 || ''01'',''YYMMDD''), 2),''YYYYMM'') AS DATE_YM3,
               KEY01, MAX(PART_NO) AS PART_NO, MAX(PARTS_DESC) AS PARTS_DESC,
               MAX(DELI_PLACE) AS DELI_PLACE,  MAX(SNP) AS SNP,
               SUM(FORECAST1)  AS FORECAST1,   SUM(FORECAST2)  AS FORECAST2,
               SUM(FORECAST3)  AS FORECAST3,
               MAX(ABOLITION_DATE) AS ABOLITION_DATE,
               MAX(TOA_COMMENT)    AS TOA_COMMENT,
               MAX(MANUF_DEPOT)    AS MANUF_DEPOT
          FROM (SELECT TOA_PRODUCT_TYPE || TOA_CUSTOMER_PART_NO || TOA_DELI_PLACE AS KEY01,
                       TOA_PRODUCT_TYPE || TOA_CUSTOMER_PART_NO AS PART_NO,
                       TOA_PARTS_DESC   AS PARTS_DESC, TOA_DELI_PLACE   AS DELI_PLACE,
                       TOA_SNP          AS SNP,        TOA_OBJECT_MONTH AS DATE_YM1,
                       TOA_DECISION_QTY +  TOA_SCHED_QTY AS FORECAST1,
                       TOA_NEXT_MONTH_QTY                AS FORECAST2,
                       TOA_NEXT_NEXT_MONTH_QTY           AS FORECAST3,
                       TOA_PART_ABOLITION_DATE           AS ABOLITION_DATE,
                       TOA_COMMENT                       AS TOA_COMMENT,
                       TOA_MANUF_DEPOT_TYPE              AS MANUF_DEPOT
                  FROM IFSAPP.TOA_THREE_MONTH_INFO_TAB
                 WHERE TOA_OBJECT_MONTH = ''[TAISYO_YM]'')
         GROUP BY DATE_YM1, KEY01
         ORDER BY DATE_YM1, KEY01),
 V5 AS (SELECT V4.DATE_YM1, V4.PART_NO, V4.PARTS_DESC, V4.DELI_PLACE, V4.SNP,
               CASE WHEN  V_RITU.KEY01 IS NULL THEN ''新'' ELSE ''　'' END   AS KBN01,
               V4.ABOLITION_DATE,  V4.TOA_COMMENT,
               NVL(V_RITU.TOA_PALE_PORI, '' '')  AS TOA_PALE_PORI,
               NVL(V_RITU.TOA_SHIP_DEPOT, '' '') AS TOA_SHIP_DEPOT,
               V4.MANUF_DEPOT                  AS MANUF_DEPOT,
               NVL(V_RITU.TOA_SERIES, '' '')     AS TOA_SERIES,
               NVL(V_RITU.TOA_PROCESS1, '' '')   AS TOA_PROCESS1,
               NVL(V_RITU.TOA_PROCESS2, '' '')   AS TOA_PROCESS2,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU06, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_06,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU07, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_07,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU08, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_08,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU09, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_09,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU10, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_10,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU11, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_11,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU12, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_12,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU13, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_13,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU14, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_14,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU15, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_15,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU16, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_16,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU17, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_17,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU18, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_18,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU19, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_19,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU20, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_20,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU21, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_21,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU22, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_22,
               TRUNC(((V4.FORECAST1 * NVL(V_RITU.TOA_RITU23, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL1.WORK_DAY) + 0.9, 0) AS FORECAST1_23,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU06, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_06,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU07, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_07,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU08, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_08,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU09, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_09,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU10, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_10,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU11, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_11,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU12, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_12,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU13, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_13,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU14, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_14,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU15, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_15,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU16, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_16,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU17, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_17,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU18, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_18,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU19, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_19,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU20, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_20,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU21, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_21,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU22, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_22,
               TRUNC(((V4.FORECAST2 * NVL(V_RITU.TOA_RITU23, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL2.WORK_DAY) + 0.9, 0) AS FORECAST2_23,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU06, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_06,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU07, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_07,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU08, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_08,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU09, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_09,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU10, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_10,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU11, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_11,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU12, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_12,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU13, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_13,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU14, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_14,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU15, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_15,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU16, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_16,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU17, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_17,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU18, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_18,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU19, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_19,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU20, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_20,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU21, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_21,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU22, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_22,
               TRUNC(((V4.FORECAST3 * NVL(V_RITU.TOA_RITU23, 0)) / DECODE(NVL(V4.SNP,1),0,1,NVL(V4.SNP,1)) / CAL3.WORK_DAY) + 0.9, 0) AS FORECAST3_23,
               V_RITU.TOA_RITU06 AS RITU06, V_RITU.TOA_RITU07 AS RITU07, V_RITU.TOA_RITU08 AS RITU08,
               V_RITU.TOA_RITU09 AS RITU09, V_RITU.TOA_RITU10 AS RITU10, V_RITU.TOA_RITU11 AS RITU11,
               V_RITU.TOA_RITU12 AS RITU12, V_RITU.TOA_RITU13 AS RITU13, V_RITU.TOA_RITU14 AS RITU14,
               V_RITU.TOA_RITU15 AS RITU15, V_RITU.TOA_RITU16 AS RITU16, V_RITU.TOA_RITU17 AS RITU17,
               V_RITU.TOA_RITU18 AS RITU18, V_RITU.TOA_RITU19 AS RITU19, V_RITU.TOA_RITU20 AS RITU20,
               V_RITU.TOA_RITU21 AS RITU21, V_RITU.TOA_RITU22 AS RITU22, V_RITU.TOA_RITU23 AS RITU23,
               V_RITU.TOA_RITU06 + V_RITU.TOA_RITU07 + V_RITU.TOA_RITU08 +  V_RITU.TOA_RITU09 +
               V_RITU.TOA_RITU10 + V_RITU.TOA_RITU11 + V_RITU.TOA_RITU12 + V_RITU.TOA_RITU13 +
               V_RITU.TOA_RITU14 + V_RITU.TOA_RITU15 + V_RITU.TOA_RITU16 + V_RITU.TOA_RITU17 +
               V_RITU.TOA_RITU18 + V_RITU.TOA_RITU19 + V_RITU.TOA_RITU20 + V_RITU.TOA_RITU21 +
               V_RITU.TOA_RITU22 + V_RITU.TOA_RITU23 AS RITU_TOTAL,
               V4.FORECAST1, V4.FORECAST2, V4.FORECAST3,
               CAL1.WORK_DAY AS WORK_DAY1, CAL2.WORK_DAY AS WORK_DAY2, CAL3.WORK_DAY AS WORK_DAY3
          FROM (V4 LEFT  JOIN V_RITU ON V4.KEY01    = V_RITU.KEY01)
                   INNER JOIN CAL1 CAL1 ON V4.DATE_YM1 = CAL1.DATE_YM
                   INNER JOIN CAL1 CAL2 ON V4.DATE_YM2 = CAL2.DATE_YM
                   INNER JOIN CAL1 CAL3 ON V4.DATE_YM3 = CAL3.DATE_YM)
SELECT V5.DATE_YM1       AS 対象年月,
       V5.PART_NO        AS 品番,
       V5.PARTS_DESC     AS 名称,
       V5.DELI_PLACE     AS 納場,
       V5.TOA_SHIP_DEPOT AS 出荷デポ,
       V5.MANUF_DEPOT    AS 生産デポ,
       V5.TOA_SERIES     AS シリーズ,
       V5.TOA_PROCESS1   AS 加工先１,
       V5.TOA_PROCESS2   AS 加工先２,
       V5.SNP            AS ＳＮＰ,
       V5.KBN01          AS 新製品,
       V5.TOA_PALE_PORI  AS ポリパレ,
       V5.ABOLITION_DATE AS 打切り日,
       V5.TOA_COMMENT    AS コメント,
       W2.TOA_CONTAINER_CODE     AS 容器コード,
       W3.TOA_CONTAINER_DESC     AS 容器名称,
       W2.TOA_CONTAINER_CODE_PV  AS 専用容器コード,
       V5.FORECAST1_06   AS ｎ月６時,
       V5.FORECAST1_07   AS ｎ月７時,
       V5.FORECAST1_08   AS ｎ月８時,
       V5.FORECAST1_09   AS ｎ月９時,
       V5.FORECAST1_10   AS ｎ月10時,
       V5.FORECAST1_11   AS ｎ月11時,
       V5.FORECAST1_12   AS ｎ月12時,
       V5.FORECAST1_13   AS ｎ月13時,
       V5.FORECAST1_14   AS ｎ月14時,
       V5.FORECAST1_15   AS ｎ月15時,
       V5.FORECAST1_16   AS ｎ月16時,
       V5.FORECAST1_17   AS ｎ月17時,
       V5.FORECAST1_18   AS ｎ月18時,
       V5.FORECAST1_19   AS ｎ月19時,
       V5.FORECAST1_20   AS ｎ月20時,
       V5.FORECAST1_21   AS ｎ月21時,
       V5.FORECAST1_22   AS ｎ月22時,
       V5.FORECAST1_23   AS ｎ月23時,
       V5.FORECAST1_06 + V5.FORECAST1_07 + V5.FORECAST1_08 + V5.FORECAST1_09 + V5.FORECAST1_10 +
       V5.FORECAST1_11 + V5.FORECAST1_12 + V5.FORECAST1_13 + V5.FORECAST1_14 + V5.FORECAST1_15 +
       V5.FORECAST1_16 + V5.FORECAST1_17 + V5.FORECAST1_18 + V5.FORECAST1_19 + V5.FORECAST1_20 +
       V5.FORECAST1_21 + V5.FORECAST1_22 + V5.FORECAST1_23 AS ｎ月合計,
       V5.FORECAST1      AS 内示＿ｎ月,
       TRUNC((V5.FORECAST1 / DECODE(NVL(V5.SNP,1),0,1,NVL(V5.SNP,1))) + 0.9, 0) AS ｎ月＿必要最小パレット数,
       TRUNC((V5.FORECAST1 / DECODE(NVL(V5.SNP,1),0,1,NVL(V5.SNP,1)) / V5.WORK_DAY1) + 0.9, 0) AS ｎ月＿日当り最小パレット数,
       V5.WORK_DAY1      AS 稼動日数＿ｎ月,
       V5.FORECAST2_06   AS ｎ１月６時,
       V5.FORECAST2_07   AS ｎ１月７時,
       V5.FORECAST2_08   AS ｎ１月８時,
       V5.FORECAST2_09   AS ｎ１月９時,
       V5.FORECAST2_10   AS ｎ１月10時,
       V5.FORECAST2_11   AS ｎ１月11時,
       V5.FORECAST2_12   AS ｎ１月12時,
       V5.FORECAST2_13   AS ｎ１月13時,
       V5.FORECAST2_14   AS ｎ１月14時,
       V5.FORECAST2_15   AS ｎ１月15時,
       V5.FORECAST2_16   AS ｎ１月16時,
       V5.FORECAST2_17   AS ｎ１月17時,
       V5.FORECAST2_18   AS ｎ１月18時,
       V5.FORECAST2_19   AS ｎ１月19時,
       V5.FORECAST2_20   AS ｎ１月20時,
       V5.FORECAST2_21   AS ｎ１月21時,
       V5.FORECAST2_22   AS ｎ１月22時,
       V5.FORECAST2_23   AS ｎ１月23時,
       V5.FORECAST2_06 + V5.FORECAST2_07 + V5.FORECAST2_08 + V5.FORECAST2_09 + V5.FORECAST2_10 +
       V5.FORECAST2_11 + V5.FORECAST2_12 + V5.FORECAST2_13 + V5.FORECAST2_14 + V5.FORECAST2_15 +
       V5.FORECAST2_16 + V5.FORECAST2_17 + V5.FORECAST2_18 + V5.FORECAST2_19 + V5.FORECAST2_20 +
       V5.FORECAST2_21 + V5.FORECAST2_22 + V5.FORECAST2_23 AS ｎ１月合計,
       V5.FORECAST2      AS 内示＿ｎ１月,
       TRUNC((V5.FORECAST2 / DECODE(NVL(V5.SNP,1),0,1,NVL(V5.SNP,1))) + 0.9, 0) AS ｎ１月＿必要最小パレット数,
       TRUNC((V5.FORECAST2 / DECODE(NVL(V5.SNP,1),0,1,NVL(V5.SNP,1)) / V5.WORK_DAY2) + 0.9, 0) AS ｎ１月＿日当り最小パレット数,
       V5.WORK_DAY2      AS 稼動日数＿ｎ１月,
       V5.FORECAST3_06   AS ｎ２月６時,
       V5.FORECAST3_07   AS ｎ２月７時,
       V5.FORECAST3_08   AS ｎ２月８時,
       V5.FORECAST3_09   AS ｎ２月９時,
       V5.FORECAST3_10   AS ｎ２月10時,
       V5.FORECAST3_11   AS ｎ２月11時,
       V5.FORECAST3_12   AS ｎ２月12時,
       V5.FORECAST3_13   AS ｎ２月13時,
       V5.FORECAST3_14   AS ｎ２月14時,
       V5.FORECAST3_15   AS ｎ２月15時,
       V5.FORECAST3_16   AS ｎ２月16時,
       V5.FORECAST3_17   AS ｎ２月17時,
       V5.FORECAST3_18   AS ｎ２月18時,
       V5.FORECAST3_19   AS ｎ２月19時,
       V5.FORECAST3_20   AS ｎ２月20時,
       V5.FORECAST3_21   AS ｎ２月21時,
       V5.FORECAST3_22   AS ｎ２月22時,
       V5.FORECAST3_23   AS ｎ２月23時,
       V5.FORECAST3_06 + V5.FORECAST3_07 + V5.FORECAST3_08 + V5.FORECAST3_09 + V5.FORECAST3_10 +
       V5.FORECAST3_11 + V5.FORECAST3_12 + V5.FORECAST3_13 + V5.FORECAST3_14 + V5.FORECAST3_15 +
       V5.FORECAST3_16 + V5.FORECAST3_17 + V5.FORECAST3_18 + V5.FORECAST3_19 + V5.FORECAST3_20 +
       V5.FORECAST3_21 + V5.FORECAST3_22 + V5.FORECAST3_23 AS ｎ２月合計,
       V5.FORECAST3      AS 内示＿ｎ２月,
       TRUNC((V5.FORECAST3 / DECODE(NVL(V5.SNP,1),0,1,NVL(V5.SNP,1))) + 0.9, 0) AS ｎ２月＿必要最小パレット数,
       TRUNC((V5.FORECAST3 / DECODE(NVL(V5.SNP,1),0,1,NVL(V5.SNP,1)) / V5.WORK_DAY3) + 0.9, 0) AS ｎ２月＿日当り最小パレット数,
       V5.WORK_DAY3      AS 稼動日数＿ｎ２月,
       V5.RITU06         AS 時間別比＿６時,
       V5.RITU07         AS 時間別比＿７時,
       V5.RITU08         AS 時間別比＿８時,
       V5.RITU09         AS 時間別比＿９時,
       V5.RITU10         AS 時間別比＿10時,
       V5.RITU11         AS 時間別比＿11時,
       V5.RITU12         AS 時間別比＿12時,
       V5.RITU13         AS 時間別比＿13時,
       V5.RITU14         AS 時間別比＿14時,
       V5.RITU15         AS 時間別比＿15時,
       V5.RITU16         AS 時間別比＿16時,
       V5.RITU17         AS 時間別比＿17時,
       V5.RITU18         AS 時間別比＿18時,
       V5.RITU19         AS 時間別比＿19時,
       V5.RITU20         AS 時間別比＿20時,
       V5.RITU21         AS 時間別比＿21時,
       V5.RITU22         AS 時間別比＿22時,
       V5.RITU23         AS 時間別比＿23時,
       V5.RITU_TOTAL     AS 時間別比＿合計
  FROM  (V5                                 V5
 LEFT   JOIN IFSAPP.TOA_INVENTORY_PART_TAB  W2
    ON  (V5.PART_NO  =  W2.PART_NO))
 LEFT   JOIN IFSAPP.TOA_CONTAINER           W3
    ON  (W2.TOA_CONTAINER_CODE     =  W3.TOA_CONTAINER_CODE   )
   AND  (W2.TOA_CONTAINER_CODE_PV  =  W3.TOA_CONTAINER_CODE_PV)
  WHERE (V5.MANUF_DEPOT            =  ANY (10,11,20,21))'
EXECUTE UP_OPENQUERY 'ifs', @sql, '##TEMP01'
SELECT  V1.対象年月                                              AS 対象年月,
        V1.品番                                                  AS 品番,
        V1.名称                                                  AS 名称,
        V1.納場                                                  AS 納場,
        V1.出荷デポ                                              AS 出荷デポ,
        V1.生産デポ                                              AS 生産デポ,
        V1.シリーズ                                              AS シリーズ,
        V1.加工先１                                              AS 加工先１,
        V1.加工先２                                              AS 加工先２,
        CAST(V1.ＳＮＰ                       AS DECIMAL(10,0))   AS ＳＮＰ,
        V1.新製品                                                AS 新製品,
        V1.ポリパレ                                              AS ポリパレ,
        V1.打切り日                                              AS 打切り日,
        V1.コメント                                              AS コメント,
        V1.容器コード                                            AS 容器コード,
        V1.容器名称                                              AS 容器名称,
        V1.専用容器コード                                        AS 専用容器コード,
        CAST(V1.ｎ月６時                     AS DECIMAL(10,0))   AS ｎ月６時,
        CAST(V1.ｎ月７時                     AS DECIMAL(10,0))   AS ｎ月７時,
        CAST(V1.ｎ月８時                     AS DECIMAL(10,0))   AS ｎ月８時,
        CAST(V1.ｎ月９時                     AS DECIMAL(10,0))   AS ｎ月９時,
        CAST(V1.ｎ月10時                     AS DECIMAL(10,0))   AS ｎ月10時,
        CAST(V1.ｎ月11時                     AS DECIMAL(10,0))   AS ｎ月11時,
        CAST(V1.ｎ月12時                     AS DECIMAL(10,0))   AS ｎ月12時,
        CAST(V1.ｎ月13時                     AS DECIMAL(10,0))   AS ｎ月13時,
        CAST(V1.ｎ月14時                     AS DECIMAL(10,0))   AS ｎ月14時,
        CAST(V1.ｎ月15時                     AS DECIMAL(10,0))   AS ｎ月15時,
        CAST(V1.ｎ月16時                     AS DECIMAL(10,0))   AS ｎ月16時,
        CAST(V1.ｎ月17時                     AS DECIMAL(10,0))   AS ｎ月17時,
        CAST(V1.ｎ月18時                     AS DECIMAL(10,0))   AS ｎ月18時,
        CAST(V1.ｎ月19時                     AS DECIMAL(10,0))   AS ｎ月19時,
        CAST(V1.ｎ月20時                     AS DECIMAL(10,0))   AS ｎ月20時,
        CAST(V1.ｎ月21時                     AS DECIMAL(10,0))   AS ｎ月21時,
        CAST(V1.ｎ月22時                     AS DECIMAL(10,0))   AS ｎ月22時,
        CAST(V1.ｎ月23時                     AS DECIMAL(10,0))   AS ｎ月23時,
        CAST(V1.ｎ月合計                     AS DECIMAL(10,0))   AS ｎ月合計,
        CAST(V1.内示＿ｎ月                   AS DECIMAL(10,0))   AS 内示＿ｎ月,
        CAST(V1.ｎ月＿必要最小パレット数     AS DECIMAL(10,0))   AS ｎ月＿必要最小パレット数,
        CAST(V1.ｎ月＿日当り最小パレット数   AS DECIMAL(10,0))   AS ｎ月＿日当り最小パレット数,
        CAST(V1.稼動日数＿ｎ月               AS DECIMAL(10,0))   AS 稼動日数＿ｎ月,
        CAST(V1.ｎ１月６時                   AS DECIMAL(10,0))   AS ｎ１月６時,
        CAST(V1.ｎ１月７時                   AS DECIMAL(10,0))   AS ｎ１月７時,
        CAST(V1.ｎ１月８時                   AS DECIMAL(10,0))   AS ｎ１月８時,
        CAST(V1.ｎ１月９時                   AS DECIMAL(10,0))   AS ｎ１月９時,
        CAST(V1.ｎ１月10時                   AS DECIMAL(10,0))   AS ｎ１月10時,
        CAST(V1.ｎ１月11時                   AS DECIMAL(10,0))   AS ｎ１月11時,
        CAST(V1.ｎ１月12時                   AS DECIMAL(10,0))   AS ｎ１月12時,
        CAST(V1.ｎ１月13時                   AS DECIMAL(10,0))   AS ｎ１月13時,
        CAST(V1.ｎ１月14時                   AS DECIMAL(10,0))   AS ｎ１月14時,
        CAST(V1.ｎ１月15時                   AS DECIMAL(10,0))   AS ｎ１月15時,
        CAST(V1.ｎ１月16時                   AS DECIMAL(10,0))   AS ｎ１月16時,
        CAST(V1.ｎ１月17時                   AS DECIMAL(10,0))   AS ｎ１月17時,
        CAST(V1.ｎ１月18時                   AS DECIMAL(10,0))   AS ｎ１月18時,
        CAST(V1.ｎ１月19時                   AS DECIMAL(10,0))   AS ｎ１月19時,
        CAST(V1.ｎ１月20時                   AS DECIMAL(10,0))   AS ｎ１月20時,
        CAST(V1.ｎ１月21時                   AS DECIMAL(10,0))   AS ｎ１月21時,
        CAST(V1.ｎ１月22時                   AS DECIMAL(10,0))   AS ｎ１月22時,
        CAST(V1.ｎ１月23時                   AS DECIMAL(10,0))   AS ｎ１月23時,
        CAST(V1.ｎ１月合計                   AS DECIMAL(10,0))   AS ｎ１月合計,
        CAST(V1.内示＿ｎ１月                 AS DECIMAL(10,0))   AS 内示＿ｎ１月,
        CAST(V1.ｎ１月＿必要最小パレット数   AS DECIMAL(10,0))   AS ｎ１月＿必要最小パレット数,
        CAST(V1.ｎ１月＿日当り最小パレット数 AS DECIMAL(10,0))   AS ｎ１月＿日当り最小パレット数,
        CAST(V1.稼動日数＿ｎ１月             AS DECIMAL(10,0))   AS 稼動日数＿ｎ１月,
        CAST(V1.ｎ２月６時                   AS DECIMAL(10,0))   AS ｎ２月６時,
        CAST(V1.ｎ２月７時                   AS DECIMAL(10,0))   AS ｎ２月７時,
        CAST(V1.ｎ２月８時                   AS DECIMAL(10,0))   AS ｎ２月８時,
        CAST(V1.ｎ２月９時                   AS DECIMAL(10,0))   AS ｎ２月９時,
        CAST(V1.ｎ２月10時                   AS DECIMAL(10,0))   AS ｎ２月10時,
        CAST(V1.ｎ２月11時                   AS DECIMAL(10,0))   AS ｎ２月11時,
        CAST(V1.ｎ２月12時                   AS DECIMAL(10,0))   AS ｎ２月12時,
        CAST(V1.ｎ２月13時                   AS DECIMAL(10,0))   AS ｎ２月13時,
        CAST(V1.ｎ２月14時                   AS DECIMAL(10,0))   AS ｎ２月14時,
        CAST(V1.ｎ２月15時                   AS DECIMAL(10,0))   AS ｎ２月15時,
        CAST(V1.ｎ２月16時                   AS DECIMAL(10,0))   AS ｎ２月16時,
        CAST(V1.ｎ２月17時                   AS DECIMAL(10,0))   AS ｎ２月17時,
        CAST(V1.ｎ２月18時                   AS DECIMAL(10,0))   AS ｎ２月18時,
        CAST(V1.ｎ２月19時                   AS DECIMAL(10,0))   AS ｎ２月19時,
        CAST(V1.ｎ２月20時                   AS DECIMAL(10,0))   AS ｎ２月20時,
        CAST(V1.ｎ２月21時                   AS DECIMAL(10,0))   AS ｎ２月21時,
        CAST(V1.ｎ２月22時                   AS DECIMAL(10,0))   AS ｎ２月22時,
        CAST(V1.ｎ２月23時                   AS DECIMAL(10,0))   AS ｎ２月23時,
        CAST(V1.ｎ２月合計                   AS DECIMAL(10,0))   AS ｎ２月合計,
        CAST(V1.内示＿ｎ２月                 AS DECIMAL(10,0))   AS 内示＿ｎ２月,
        CAST(V1.ｎ２月＿必要最小パレット数   AS DECIMAL(10,0))   AS ｎ２月＿必要最小パレット数,
        CAST(V1.ｎ２月＿日当り最小パレット数 AS DECIMAL(10,0))   AS ｎ２月＿日当り最小パレット数,
        CAST(V1.稼動日数＿ｎ２月             AS DECIMAL(10,0))   AS 稼動日数＿ｎ２月,
        CAST(V1.時間別比＿６時               AS DECIMAL(10,5))   AS 時間別比＿６時,
        CAST(V1.時間別比＿７時               AS DECIMAL(10,5))   AS 時間別比＿７時,
        CAST(V1.時間別比＿８時               AS DECIMAL(10,5))   AS 時間別比＿８時,
        CAST(V1.時間別比＿９時               AS DECIMAL(10,5))   AS 時間別比＿９時,
        CAST(V1.時間別比＿10時               AS DECIMAL(10,5))   AS 時間別比＿10時,
        CAST(V1.時間別比＿11時               AS DECIMAL(10,5))   AS 時間別比＿11時,
        CAST(V1.時間別比＿12時               AS DECIMAL(10,5))   AS 時間別比＿12時,
        CAST(V1.時間別比＿13時               AS DECIMAL(10,5))   AS 時間別比＿13時,
        CAST(V1.時間別比＿14時               AS DECIMAL(10,5))   AS 時間別比＿14時,
        CAST(V1.時間別比＿15時               AS DECIMAL(10,5))   AS 時間別比＿15時,
        CAST(V1.時間別比＿16時               AS DECIMAL(10,5))   AS 時間別比＿16時,
        CAST(V1.時間別比＿17時               AS DECIMAL(10,5))   AS 時間別比＿17時,
        CAST(V1.時間別比＿18時               AS DECIMAL(10,5))   AS 時間別比＿18時,
        CAST(V1.時間別比＿19時               AS DECIMAL(10,5))   AS 時間別比＿19時,
        CAST(V1.時間別比＿20時               AS DECIMAL(10,5))   AS 時間別比＿20時,
        CAST(V1.時間別比＿21時               AS DECIMAL(10,5))   AS 時間別比＿21時,
        CAST(V1.時間別比＿22時               AS DECIMAL(10,5))   AS 時間別比＿22時,
        CAST(V1.時間別比＿23時               AS DECIMAL(10,5))   AS 時間別比＿23時,
        CAST(V1.時間別比＿合計               AS DECIMAL(10,5))   AS 時間別比＿合計
  FROM ##TEMP01 AS V1
